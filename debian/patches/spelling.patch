From: "Barak A. Pearlmutter" <barak+git@cs.nuim.ie>
Date: Sun, 17 Aug 2014 09:03:13 +0200
Subject: spelling

---
 src/mlpack/core/kernels/example_kernel.hpp                            | 2 +-
 src/mlpack/core/tree/cosine_tree/cosine_tree.cpp                      | 2 +-
 src/mlpack/methods/amf/init_rules/random_acol_init.hpp                | 2 +-
 src/mlpack/methods/amf/init_rules/random_init.hpp                     | 4 ++--
 src/mlpack/methods/lsh/lsh_search.hpp                                 | 4 ++--
 src/mlpack/methods/sparse_autoencoder/sparse_autoencoder_function.hpp | 2 +-
 src/mlpack/tests/cosine_tree_test.cpp                                 | 2 +-
 7 files changed, 9 insertions(+), 9 deletions(-)

diff --git a/src/mlpack/core/kernels/example_kernel.hpp b/src/mlpack/core/kernels/example_kernel.hpp
index fe3794e..0c7e3ec 100644
--- a/src/mlpack/core/kernels/example_kernel.hpp
+++ b/src/mlpack/core/kernels/example_kernel.hpp
@@ -111,7 +111,7 @@ class ExampleKernel
   /**
    * Returns a string for the kernel object; in this case, with only the memory
    * address for the kernel. If your kernel has any members, your ToString()
-   * method should include those as neccessary as well.
+   * method should include those as necessary as well.
    **/
   std::string ToString() const
   {
diff --git a/src/mlpack/core/tree/cosine_tree/cosine_tree.cpp b/src/mlpack/core/tree/cosine_tree/cosine_tree.cpp
index 006bad6..15fc02d 100644
--- a/src/mlpack/core/tree/cosine_tree/cosine_tree.cpp
+++ b/src/mlpack/core/tree/cosine_tree/cosine_tree.cpp
@@ -334,7 +334,7 @@ void CosineTree::ColumnSamplesLS(std::vector<size_t>& sampledIndices,
     cDistribution(i+1) = cDistribution(i) + l2NormsSquared(i) / frobNormSquared;
   }
 
-  // Intialize sizes of the 'sampledIndices' and 'probabilities' vectors.
+  // Initialize sizes of the 'sampledIndices' and 'probabilities' vectors.
   sampledIndices.resize(numSamples);
   probabilities.zeros(numSamples);
 
diff --git a/src/mlpack/methods/amf/init_rules/random_acol_init.hpp b/src/mlpack/methods/amf/init_rules/random_acol_init.hpp
index 36352a1..2ec97be 100644
--- a/src/mlpack/methods/amf/init_rules/random_acol_init.hpp
+++ b/src/mlpack/methods/amf/init_rules/random_acol_init.hpp
@@ -2,7 +2,7 @@
  * @file random_acol_init.hpp
  * @author Mohan Rajendran
  *
- * Intialization rule for Alternating Matrix Factorization. 
+ * Initialization rule for Alternating Matrix Factorization.
  *
  * This file is part of mlpack 1.0.12.
  *
diff --git a/src/mlpack/methods/amf/init_rules/random_init.hpp b/src/mlpack/methods/amf/init_rules/random_init.hpp
index 993897e..aa94101 100644
--- a/src/mlpack/methods/amf/init_rules/random_init.hpp
+++ b/src/mlpack/methods/amf/init_rules/random_init.hpp
@@ -2,7 +2,7 @@
  * @file random_init.hpp
  * @author Mohan Rajendran
  *
- * Intialization rule for Non-Negative Matrix Factorization (NMF). This simple
+ * Initialization rule for Non-Negative Matrix Factorization (NMF). This simple
  * initialization is performed by assigning a random matrix to W and H.
  *
  * This file is part of mlpack 1.0.12.
@@ -36,7 +36,7 @@ class RandomInitialization
     size_t n = V.n_rows;
     size_t m = V.n_cols;
 
-    // Intialize to random values.
+    // Initialize to random values.
     W.randu(n, r);
     H.randu(r, m);
   }
diff --git a/src/mlpack/methods/lsh/lsh_search.hpp b/src/mlpack/methods/lsh/lsh_search.hpp
index 0c51593..88e7e80 100644
--- a/src/mlpack/methods/lsh/lsh_search.hpp
+++ b/src/mlpack/methods/lsh/lsh_search.hpp
@@ -144,8 +144,8 @@ class LSHSearch
    * standard hash.
    *
    * This function does not have any parameters and relies on parameters which
-   * are private members of this class, intialized during the class
-   * intialization.
+   * are private members of this class, initialized during the class
+   * initialization.
    */
   void BuildHash();
 
diff --git a/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder_function.hpp b/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder_function.hpp
index 6b4a135..f93a2f7 100644
--- a/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder_function.hpp
+++ b/src/mlpack/methods/sparse_autoencoder/sparse_autoencoder_function.hpp
@@ -149,7 +149,7 @@ class SparseAutoencoderFunction
  private:
   //! The matrix of data points.
   const arma::mat& data;
-  //! Intial parameter vector.
+  //! Initial parameter vector.
   arma::mat initialPoint;
   //! Size of the visible layer.
   size_t visibleSize;
diff --git a/src/mlpack/tests/cosine_tree_test.cpp b/src/mlpack/tests/cosine_tree_test.cpp
index 9248951..3c17a3f 100644
--- a/src/mlpack/tests/cosine_tree_test.cpp
+++ b/src/mlpack/tests/cosine_tree_test.cpp
@@ -55,7 +55,7 @@ BOOST_AUTO_TEST_CASE(CosineTreeNoSplit)
  */
 BOOST_AUTO_TEST_CASE(CosineNodeCosineSplit)
 {
-  // Intialize constants required for the test.
+  // Initialize constants required for the test.
   const size_t numRows = 500;
   const size_t numCols = 1000;
 
